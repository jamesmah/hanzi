{"version":3,"sources":["serviceWorker.ts","utils/notch.ts","核心/主题/主题.tsx","核心/主题/号码.ts","核心/主题/字体大小.ts","核心/主题/颜色.ts","组件/主标头/主标头.tsx","数据/数据.ts","页面/字/字.tsx","数据/常见.ts","页面/字表/字表.tsx","页面/未找到页面/未找到页面.tsx","页面/首页/首页.tsx","核心/程序/程序.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","width","screen","height","pixelRatio","devicePixelRatio","notchHeight","document","documentElement","clientHeight","主题","号码","标头高度","字体大小","颜色","背景","ToggleContainer","样式","div","Toggle","button","按钮","Button","attrs","variant","容器","header","标题","h1","主标头","history","params","URLSearchParams","search","showAll","get","showVerbose","pathname","onClick","goBack","push","delete","append","replace","toString","数据","styled","Container","Section","字","character","字对象","useMemo","i","length","radicals","j","strokeNumbers","k","characterGroup","characters","find","char","fluid","pinyins","join","radical","additionalStrokes","totalStrokes","translations","map","def","index","key","pinyin","definitions","definition","常见","includes","无序列表","ul","VerboseList","列表项目","li","翻译","span","字表","部首","显示所有","部首对象","rad","symbol","部首对象副本","strokeNumber","filter","笔画数","to","未找到页面","首页","Page","程序","component","path","exact","ReactDOM","render","StrictMode","theme","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd223feb.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const width = window.screen.width;\nconst height = window.screen.height;\nconst pixelRatio = window.devicePixelRatio;\nconst pwaMode = height - document.documentElement.clientHeight < 50;\n\nexport const hasNotch =\n  pwaMode &&\n  (// iPhone XR\n  (width === 414 && height === 896 && pixelRatio === 2) ||\n    // iPhone X/XS\n    (width === 375 && height === 812 && pixelRatio === 3) ||\n    // iPhone XS Max\n    (width === 414 && height === 896 && pixelRatio === 3));\n\nexport const notchHeight = hasNotch ? 2 : 0; //rem\n","import 号码 from \"./号码\";\nimport 字体大小 from \"./字体大小\";\nimport 颜色 from \"./颜色\";\n\nconst 主题 = {\n  号码,\n  字体大小,\n  颜色\n};\n\nexport default 主题;\n","import { notchHeight } from \"../../utils/notch\";\n\nconst 号码 = {\n  标头高度: `${5 + notchHeight}rem`\n};\n\nexport default 号码;\n","const 字体大小 = {};\n\nexport default 字体大小;\n","const 颜色 = {\n  背景: \"black\"\n};\n\nexport default 颜色;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport 样式 from \"styled-components\";\nimport { notchHeight } from \"../../utils/notch\";\n\nconst 主标头: React.FC<RouteComponentProps> = ({ history, location }) => {\n  const params = new URLSearchParams(location.search);\n  const showAll = params.get(\"all\") !== null;\n  const showVerbose = params.get(\"verbose\") !== null;\n\n  const toggleCommon = () => {\n    if (showAll) params.delete(\"all\");\n    else params.append(\"all\", \"true\");\n    history.replace(`${location.pathname}?${params.toString()}`);\n  };\n\n  const toggleCompact = () => {\n    if (showVerbose) params.delete(\"verbose\");\n    else params.append(\"verbose\", \"true\");\n    history.replace(`${location.pathname}?${params.toString()}`);\n  };\n\n  return (\n    <容器>\n      {location.pathname !== \"/\" && (\n        <按钮 onClick={() => history.goBack()}>⇦</按钮>\n      )}\n      <标题 onClick={() => history.push(\"/\")}>汉字</标题>\n      <ToggleContainer>\n        <Toggle onClick={() => toggleCommon()}>\n          {showAll ? \"All\" : \"Common\"}\n        </Toggle>\n        <Toggle onClick={() => toggleCompact()}>\n          {showVerbose ? \"Verbose\" : \"Compact\"}\n        </Toggle>\n      </ToggleContainer>\n    </容器>\n  );\n};\n\nconst ToggleContainer = 样式.div`\n  grid-area: right;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst Toggle = 样式.button`\n  font-size: 0.5rem;\n  width: 3rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst 按钮 = 样式(Button).attrs({\n  variant: \"link\"\n})`\n  color: white;\n  font-size: 2.5rem;\n  display: flex;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    color: white;\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nconst 容器 = 样式.header`\n  height: ${5 + notchHeight}rem;\n  padding-top: ${notchHeight}rem;\n  background: blue;\n  display: grid;\n  grid-template-columns: 4rem 1fr 4rem;\n  grid-template-areas: \"left center right\";\n  justify-items: center;\n  align-items: center;\n`;\n\nconst 标题 = 样式.h1`\n  grid-area: center;\n  cursor: pointer;\n\n  a {\n    color: white;\n  }\n`;\n\nexport default 主标头;\n","import 数据 from \"./数据.json\";\n\ninterface ICharacter {\n  character: string;\n  pinyins: string[];\n  definitions: string[][];\n  translations: string[];\n  radical: string;\n  additionalStrokes: number;\n  totalStrokes: number;\n}\n\ninterface IStrokeNumber {\n  strokeNumber: number;\n  characters: ICharacter[];\n}\n\ninterface IRadical {\n  symbol: string;\n  names: string[];\n  strokeNumbers: IStrokeNumber[];\n}\n\ninterface IRadicalsByStrokeNumber {\n  strokeNumber: number;\n  radicals: IRadical[];\n}\n\nexport default 数据 as IRadicalsByStrokeNumber[];\n","import React, { useMemo } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport 数据 from \"../../数据\";\n\ninterface RouteParams {\n  character: string;\n}\n\nconst 字: React.FC<RouteComponentProps<RouteParams>> = ({ match }) => {\n  const { character: 字 } = match.params;\n\n  const 字对象 = useMemo(() => {\n    for (let i = 0; i < 数据.length; i++) {\n      const { radicals } = 数据[i];\n      for (let j = 0; j < radicals.length; j++) {\n        const { strokeNumbers } = radicals[j];\n        for (let k = 0; k < strokeNumbers.length; k++) {\n          const characters = strokeNumbers[k].characters;\n          const characterGroup = characters.find((char) => {\n            return char.character === 字;\n          });\n\n          if (characterGroup) return characterGroup;\n        }\n      }\n    }\n  }, [字]);\n\n  return (\n    <容器 fluid>\n      {字对象 ? (\n        <div>\n          <h2>{字对象.character}</h2>\n          <p>{字对象.pinyins.join(\", \")}</p>\n          <Section>\n            <p>部首：{字对象.radical}</p>\n            <p>部外：{字对象.additionalStrokes}</p>\n            <p>总笔画：{字对象.totalStrokes}</p>\n          </Section>\n          <br />\n\n          <h3>英文</h3>\n          <ul>\n            {字对象.translations.map((def, index) => (\n              <li key={index}>{def}</li>\n            ))}\n          </ul>\n\n          <br />\n          <h3>字义</h3>\n          {字对象.pinyins.map((pinyin, index) => (\n            <div>\n              <h4>{pinyin}</h4>\n              <>\n                <ul>\n                  {字对象.definitions[index].map((definition) => (\n                    <li>{definition}</li>\n                  ))}\n                </ul>\n              </>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>未找到字</p>\n      )}\n    </容器>\n  );\n};\n\nconst 容器 = styled(Container)`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  overflow: auto;\n`;\n\nconst Section = styled.div`\n  font-size: 1rem;\n\n  p {\n    margin-bottom: 0;\n  }\n`;\n\nexport default 字;\n","const 常见字列 =\n  \"的愿协砂妥摧疵丫虱僮是李轮恭谣栗憧鹦坷玆不底略塔缸菊忏蒹笆衲我约慧贺芒瘦琨憩竽杳一雄幻魂陵钧阙懊梖姒有课脸睛雯匿萱聋賏嬿大答短逸轨砖怅盎闺忪在令鹰旗虾嘘辄婊浙鲲人深冲萨寸缚搏盔疙槁了票朝丸呦嘟榕峦蓁馋中达忍厚洒盆饥矜烷甡到演游斋贞债捣凛喈癞资早河芬蜂霞渣铺跩咋要卖批革钻挽眺鹉酣翌可棒混庸厕逍虞蜴卍栱以够窗舒鹤畔俯惚遏唠这黑乡饮摔蕴绅畴亘轶个院蛋闭盒颈谤羁贔驮你假季励虫获珑媛万铬会曲散顿氛畏咫堑掐驽好火册仰悄喂俏泛蛹阜为准弃阁霖脾淆疮骥啐上百熟孟愧姬蜀韶樊猷来谈奖昌斜赴楠憋雱癈就胜唯访尸囊乞祁戾蝨学碟藏绪循噪诅诟别淂交术婚裕俩熄匀搔匮楹也推镜勿堡锡貂蜥崛氨用存紧州旺诀寰袒咨菅能治猜阐恶肇迋奄湃泞如离喝抢叉璋敞忱账戟文易尊扫燕晕跪玖粟拮时往乾糊津浊囚拌谯踞没况县宙臣伐溺悴骖忐说晚伯尝丧峡骆祠焜骅他示偏菩茂窃憬扼溅彧看证偷赐椅枕苇髅漳纰提段秋赤缠倘脊筑欸罈那导层喊刑慌瑶蛤葆郢问伤颗盗脉垮疆茱瘩聒生调食擎杉帕乍骐剷跚过团淡劝泊莹杆捶恙犛下七申奋撒琦眸须陞驷请永冠慈递厢窜亢榻姣天刚衣尽疲渺孽葔潞谪们哥仅污杆脏卅艸哞堐所甚帐狐趁削夭筛锤忑多德赞罚欠锣簧岳琢焊麽杀购幽盈虐徘岳簷饷小怕犯准晃豔馒慵仆钠想包敬兼蛇薇趴戮厘娄得列勇尖牡霉鎚跎篷倭之概洲彰慎衍啼砰揆胭还照束灰粒腊冗仑遽邋电夜斗番系喧缉炜峘秧出排徒衡倦娶絮篱圃恻工客嘉鲜溜遂啄笈町宸对绝柔扩遵睁沸瘫馊鲈都软绩毫腐裙萃吏潢妤机商笨夸疾韦嘶痊岖椿自根拥炮鸭矢鸳庶蟆锂後九漂拆璃伺禽厥嚥猬子切狮监牢钉惫棘怂嶙而条诗栏劣婴徨娑琬醺讯集围迟患蓄屐沁镶啵站千乖证祂奸舆窘侄嘈去落孤倾呈廿邂鲸庵逖心竟姓郁浑堵掀缕瞑涘只越吸汪剂葬嫖硷赂爿家待私纷妖蓬苟俨澹卤知忘避托玻鸦檯栈杵鮀国尽范漏塑尝矫蔬苯滕台据抗渡飙挨铎鸠劭荪很双盖姑伏蕾棱闲忡殡信供祝秒弊璿哗迢枣嫦成称序吾扮挚徊恣佗臧章座晓窝侬券拱昀掺峋何值富辆渴厨蕙泠捅坻同消译龄歪醇徬涟迩暾道产巨跌苗呻滞眩衿鬩地红秀浩汗霍吠噫饕鈃发跑馀肥陶剃妞娥皎俎法嘛辉兽栋浆氾荼娓据无园插煞琳葡芹鳄镉蜒然附察抹蓉暨叩镖糯褉但硬庆酸埋滨朽侃垠邑吗云积税叡履侪虏潺缈当游愈陷澎捞赦俾佣涎於展端谷并咕汐樟柿沚本执移冲泣耕丰榴绸沪现闻宫杜腾棉虔咛庠綵年唱挥胸柯烁茅炬濂袓前育爆甘催尉棠窦逑轫真斯港胞畅艰仑笠狈蛢最某雪诞勾妓膳翱踝捺和技硕岂樱棺魉莘鲶拴新唉借辞阮鹏儡躇傜耆因息帅墙斥蒸鸯翡叱柑果苦丢凉搜癌懦姜缇潁定质括碎踩纬渗枭懵浚意油挂晶返菌邵匕椭喟情救盘邱坛撇筱藩贻棣点效偶逻垂惩畜徉猥嗷题须末脆唤绑崖觞哄熨其介厅喷储甫瑕拣咁挓事首朱玫贩崩蕊吱粱甕方助凡娃匆魄揣皈迭槐清职惊培添拂擒墉邰娩科例货咱坑汰挂傌悚鑞样热灭潜柴氓屯梢榆蕤些毕醒祥邓歇莽巅脓腋吧节虚筑糖萝矽踌冇瘁叁害瑞孔昆呒侏萌寨铿此击拍柏暮萄弧幌镁澍位乱遗叭柜蕃澈杭摒莠理态忠邀娟曝饺侥徕糸行嗯志犹腹疋奎栾嗦悌作宝透妻煮向裘奠烜勺经倒烈估泛胏塌痲萼涌者注银荒稀烛饵夸壬枰什停顶袋兹腻偎瘖诧伝谢古雅径抑襄泻芯碇锌名输诺垃携妆蔓蟀镳饴日规圆傲芭髓彗驿锚幡正福熊淑框朴樽耨迥铄华亲替圾彷薯衔禾孚胯话查休旦罐颂茍瑾陇岌开复材亿虹薛磋塾豺痢实步挑截拷滩萎俭悖姝再举侠币萍橘廓沱搥诳城鱼鸡羽臂贰悯腺钛醃爱断累妇袭嘲铸橱肄瞠与终互泥叙叹茎僵脐晡二轻掌欺吻枚歼惋唢獠动环念弦仿侮壤擞诙膫比练米筹贼豹浇噗拎腮高印伴舍羯巢蚤呛戎唰面随辅忌浴酬恃抴崚榛又依降串体碑瞻蛀喳烯车趣豪伸翠翩拚渲鳕膊力限篮喇灿蚕汀酋嗣淅或响洗耻敲辽椒跆砥纣种省健繁胁矿嚼埸枋佶像局饭廖侣屡粥嬉沽葩应续怜逛蚁谴磅怆渥嫡女司疯劲秩卵佫噶黝狞教角宏臭佑撰勘耙鱿缄分简困鲁谨攀脖憔殇诿手极址壮寡肌吨挠蔫帛打干兮捕岳冯澜羲爻甬已篇操穷赔宴锻扑籁芩次罗临拔掩盏笙眶孜蹛长佛骗于匙阪厄蛎恿玑太克咧丑曹浦嚷蹉衙鹫明阳药莉纽迦伽孵痣豊己武绿糟签颁徽淀骧倜路疑尼炸晋炼隅恸攒蹴起送蔡坡喻尬寥灸鎗镂相拉玉蒙绵胀缤愕闸丘主习辛腿咏辟簾淤孺腓关源辈坦摊艘烘狙洄邸凤免敏怒馨株茜槛昊脯间志减甜珊只驯嗈踼毁呢鸟彼韩孕湘噎霎沃菀觉烦街缓杰饲厦嗽妍犊该足聚悉拘爹闰兢拽珂十馆郎扯哟梨煤瑚牯盅外仍泡割羡喽链冉逵挹凰低恨艾肤侍锈甸泯烩友广苏胎肝疫诫怔龌錡才土缩恒袍雕颊蠹銮胳民呀枢玲罩黯俐缀镛叼系楼碰朵叛并曳谄雉馄进坏采泉御铝蓓灼梗猝使兵默汤谜弗暧紊麾谀她显婆猛嫁爪郤彤胤卞着率股驾庙鄙淌荐馥俦各圣童幼肠钗喀诣髦雎少码符坪谎栽昆眛璨菫全众抽巫潘狸蔑禀浣炘两争获弯埔谘峙馏鼐鹄回初宇胆卜柄躁蒜呗酮加误废昏占悸菇窑腑氟将楚赢鞋拦喉逅讦吁桀感责肯怡煌擅雇机牒帚第境砍吐俄劈殴炯狒荔性野钢唐札秉泌颐痰洱球预欧悠骤芷酥缪剌窖式具届盾陌裸缮扉剽薮把智禁跃澄锵莓嵩篡蔻被压苍侵仓贾辕缅沬捂老系脱丹匪逗骇朕驭锾公青渐鑑宵寓巍蟋辇苳龙贵仙泽钮咚糗濒贮夤程顺泪薪岗璞扛剔妲璐论负触逝荡烫杏局盥恚及魔途彦卸铅茁钍莞沝别适财后旨啸琵肋阖氦给哇箱召粽炳礁噩筏颚听测厌吕贸屿秽佢炖遢水慢籍碧舌竖岔揖纭渤重怀冰晨历惶僻圳雩舀体懂涛辨叮仕焊芜涧猕做史订植咒挪嗡亵筐碉校配哭痴钥栅诵崭藕呣里呜稳瑰苹迄瞌踅垓矬常味析钓祭顷捌蜻垛菈东亦杰轩屈窄遁坞齁氰风医坚勤陋鸥赃绫鐽韭您迎桥珠雀鲢涡冶馅帘湾舞懒浓睹郊琮惦芮谒啦恋贤悟媚倩卯梧菠噤见细丝磨娜兜锯罣绥蓑解灌露剪诱茧扔殆躄蹼等甲森逼衷磊苏兀谆棹部帝危玄菁抒邹讼琅焢原句占暖殿夷莅臼汨拧月属茶躲撕绰隘踮鮭臾美灵惯洛蠢溯蹋炙啜疝先评尘症惟拙湛雌晤蛭管骑布挡嚣僚昼啧惬捀区宜爸敝踊芙岫褒苞烊错败阶碍跨杖蛰竺毗绁音左夏亨膀溃桩匈倏衹否追谊逊筒凶藐葳哮邈啊狂瓶蜜纹鸽汲旱伎踽找敢哩盼乳妒禄骰杞尻网春惨姆仗沌皂阉歛淙乐狗械赋轴祺濑甭荃銂让际隐彬撤呐绒欣呷嘹通遇丰壁潭卦耽霏麴夆入族旅缴佛聆粪酪糜涪期群椰捷桂栖粤雍旳肓选痛亡乏愤蝇卤饪绯颳较右汽戒捧佮曜勋饯庖四康贝憾袖唾懋煦颦鸢场佳娘滴埃汇咎漓煇炤由杨寒桑壹楣痘娴荀跺书木遭菲赫匠聂揪悱愍它病吹嫌谦蛛垢囝鸾啷快戏暑愉汇悼瞳婵亩讴从项珍爬魏舜闵佼龊壑欢抓零恼粹耿睿玟仞辘数徵刊删傅瞄跤荤愫胛表善邮叹寮芋鉴俘灶绛怎官村抵猴瞒躬癖栩匾至护乃棚衰竭斟瞋浬臊立博予摘辜茵淇咄靦壅内补赖蒋恳吼莒幢坍睇合石摇箭桶苛毯迂嗖忉目尔纳夕吋浸幸蓊冽刈望营烟翁衫拯骋疹偌蹙认历伦牲瞬克岱儸巿泵几只尾迹冻豆庐桔蒨珣社按狼勉猎沛殃讹隋孃告妹浮莱琼掠橄籐劾畦更里骨洁卿廊恤眯裱蠋版编杯贪戚凸叽猖蜃戍度岁隔恰卓搅鳞泄蚌蝎考择洪曰殖俺蒙凿吆羡喜温织侨泼酌芥咻毘兀头守询沧譬倡榄晏鳍靳难血振咖翰朦楷诬钏殁光领忽唷刮蕉硫漪潦伕买寻索扣斌暱苔辫钵蹒今田惠采枉焕麒蔺嗙佚身养峰奔梁掏椎症龈囱许谓席泳庞蝉禹妾柒嘤弟居喵迹闽焰喙琇娼趺若异胡涯宅狄厘蜓脕贀算雨租夺麟绳袅烽徛脩记止款抄宰惰亥舔倔砾代跳扰疗梭芽倌娣唏臬统君企署纠裹吭汶黴罄处烂刺誓丛宛诃诏碾艋完优芳盃雕御裔侈瞰邬号封鼠骚澳赎梓膺蝗掣接拜折翼毙燥蓦渚魇钨言恶频屠颖滔岩槌譁缭政啥冒咪腔贬帜鞘钿糟玩浪痴雾伫悍瓣噬悻撬师核阴涉躺袂狡咐螫噪字聊哲锺划坟惕璀唧矕并急针踢寺颉蒙肪觑哆男状伊谋炼啤怯羚箩脍计陆寂牺胃押嫩羿窠粼谁激嘴焦昂尴龚葫薏孑山模倚涵勋颤嚎箔踱氐张攻霸础骄钝豚庇浯嗄党忙扬绕卑腥埠俪腆痉每良沉俱蚂缔暸嘱烸赣且剧悔霹墓粮唆颅睫揩结牛虫坜冥哑妃玺谧芊改垒菜唬妄槟瓢褐舫昝非增距氏董簿蹄擂瘪蹑星维复彻淋斧厮遑晌鼬连静鼓吝卢肿讥萦埵甥哈阵摩曼偿纶啃罹乒拄建抱郑寿姻僵琶粘刽荧放势庄粉砸齣愿栗娉狰直严副廉践辖噱钊捻鲛转词页炎殷蹲狷彪谟躂报亚烧祸润敷搪瘀锄謢活夫弱耗铜喘氢蛾閤趐设签暂炮盲扎橙馁屹陛变悲剩啡扎酿咆洹哽詘指密豆肚驳佑靡谕蜿苹气幕探贡湿肖砌胚逄拺研毒耐鼻凑愈筷卉姗靼陈厂祖挖炒隧兑拇獗愔试爽遍貌尿嗜溼炽帑捩西缘萧捐穴檬呸睦蹶硐五店握融蟑迳镀鲨桧稹希吴愁筋拓碌踹碴鼾淩取兰龟云诡襟冢辟陲顸神睡哀稣谬凋祟漱窿桎化致发捡淫圭懈窒箇刎物江延饱荡寇术惺呆榭王宿库铃鼎污搓谲蝌蠕战翻隆雳斩哨攸勦砺埂近香盟鸣尧倪橡迺蛟迵世蛮傻奉伪筠膛臀桢罡受警眉燃饿桦俞痪匝颢义控固饰驰诈祉褔夯圜反赵秘绘蚊姜冀渠乓赁单冷卷黎瘟旬炊弋偬墬死威搭卷肢秃瓷咸谏纔任微昭恢挫脂遐狸弭刨跟坐宁瞧槽噢揽吽俸筊便周托茫扶撼鹭痔烨彊空宗辩幅兆衅茄霭弼筌林普覆迪僧庚蜢轼磺葄士登吵柳昧炫塘姥捆蹊台母耳瑜螂谭郡璁磐壼却络閒矛匹惭韬钙荏欉北午拨吊芝涩挟漾吒谖队恐沈侯奸崔牟跛崁胫功套升玛聘贷糙翎泱宕必巴胖撑眷胡阎磷谑珪声杂丁薄熙晒旻嗳洼椆写创妙敦猩琉赘吩嵌揶平旧残挤癢捏霆敕栓蓼影辑违墨帖绮呎氮踵赀业幸稍琪贫膝炭鲍鞦屄金剑媒凌贿拭霄俟酯觎档亮忧侧扑暗媳婿钾鹧片述销枫笼醋瘤尪茸雕讨堂恩嗨丘膨猿谚弛掴色酒颜梯颠杠颺恺葯賸容丽船梁讶鑫煚裴萏扈央牌奈廷玮瀑铠汞滢淬妳仔映儒尹喃蝠剿玠贲向脚井咬詗剖钜瞥鹬蝣市突拼岚柱袜苓氯钲綑则搞屋览袁逾傀桨跻潸员父乘兔漆涅烬仝嬷瘐兴俊京怖毋扳墅瀛蚪玎利暴藉稿辣惘璇骸鳅辍强防洞齿棍凳困钳燊赈白吉川狱矩呃愣镕捱鸲价礼宪爷佐掘恬靓狩嘀安素拟迈澡捍嫉漩骼昃呵招寝闷渊榔琐攘掬婬特草塞乔痞窍嫂垣酝囿思周倍姿矮蜗淼荻祀坳叫房户踪戈旷梳咯琛滮总餐摆宾勃梵憎篑獭蔘办虑桌家吞暇搂茗箝饨保充域弘肆稻藻桓菡雹花府劳韵抖柠酵浒隹畀议背赚岭咳抉屉桠邝渭传典皇咦亭辗陡珀楔掔元仁逃裤淘蔚摺痠缱綩求漫鸿壳穗钩箫靴诒胝份景横孝黏卜飨咀婶搾件绍牙仇冈莺桐谷擘軂持诸拖誉歧匡蚱矗愠觊万琴齐妮屑蜘曦瘴釆崽未忆农惧拢祯璧璟稔沓究援滚促潇哔偈籽槭褛决尤障驶谐窟蹦晒摃衮投缺搬疼遣亟昶沥帷傩哪扁奶凶诊谛咙弩黉虌喔骂乌粗祈溢铮洸镰嗲笑纯了耍霜黛嗤婪鼹柰猫惜松糕熬晦戌翊芎鏖组授戴仲饶伶屌背埤崴独皮谱裂闯逮耘俑邢濠级松酷吟婉傍裳磕呓鶩走委棋陀致葱啾暐缥忒支湖吓赌雁刁嵘撩骛揄曾诚摸爵觅堤胺峥铀挛标麻额哉讽恍笃鹊偃缰流置瓜亏膜匣烹昕闾锉竹靠役锅挣谍巩寐恫筵兄继怨刷斤禧厝徙瞿鸪阿判染旭帆轿疚遴蟒糠室益迫晴铺耸鸶濯淦礴卡波醉蝶凄瀚汹堉湮亳马姐锁阔瑟斐蔷跋涤幔共既震洩艇忿沐陨琥宓需射床顽壶泓咽丕轧瓒海欲闹牧苑拐烙簇槙陕口刻佩契悬驴畸鹂忝腱门堆牠轰詹罕讳笋崧誏般释徐羞诠沫揍鬓诌忾线含尺拾滤绽曙竑飒鳌语承干锦掰刃铐绎喋玷命退潮逆稚窈朔镍舶谗观莫帽堕辰渝涓阕箕鬟视刘盛夹募仄睬燿墩栲朋昨孙枝懿瑛矶胥哒篓联旁屁瓦慨葵岐蚓晾旌参纪净舟哼噜凄嗔砷幄格赶凯悦汁绣鲫嬴濡翳黄制撞惹佬奕楞榷猾棻钱尚迴疏纤窥鲤尸阂荞修艺损锐肃浏荆蜍韆靛失肉伙翘遨隶偕夙琍铛儿律牵哎渔蔽徜睐宦唅住铁厉综恕仟饥蚯樕轭八奏惑纲蝴敛肮谩鲷壕脑树羊扇垫丞蔼璜佞褟板毛冬驻昱诘辙湄叟羌吃罪桃屏竿鳖恁鳗团撂另笔舰堪缝疤霈棕沅犷换彩眠弥蹈膏诛笺疡讫即注伍贯鞭锥鞠垚啬洵象归溪愚仆窕茉蛊眈锭料弹飘抬豫皱煜讷肴髻录虎泰喂岩晰傭鸵豨齰拿卫宋靖辐晖嗓痹囤胼专刀圈狠歹舅酹殉裆桹远皆竞饼甄孰昙墟蕨砝速键闪凝斑煽铨旄胱涔基售纵邻淹姚艳檀愎仃帮块崇擦崎钞绷竣稼黔形险滑滋骏袱峨熹嵋昂确荣乙坤薰绊揉沂瑙涸候播俗蛙婷焚珈峭稷婀装施浅灾宠芦鹃葾忖搀孩铭莲莎棵咸诲拈荟梏备罗紫毅弓沮臆隍妩蛔歌汉沟卒犬呕焰鞑嚏偆界赏旋汝涂瞪隽嗅箴纂除欣摄征刹淳熔佯绻堀南升聪赠郁丐堇蚣湍倬器叶毁斗坎茹韧躏爰晟画萤庭抛煎盘扒雇颔紘诉载麦秦螺菱憨乩痧锒差嘿描辱遮篠舵麓戕琱讲弄妨涂枯涕肛酗绢玹类钟勒披台衬戊寅嗝凊英付仪允昔蚀坝洒褓寤案寄陪侦瘾溉抠媲梆鲔带鬼榜欲蒂瑄骷瞩晞囥久哦板夥坠翟碘钡锢珞乎灯慕朗唔怠鞍诽剁蚜掉呆耀笛瞎钰冕拗慑豋迷洋献劫筝躯榨朴嗟搵量嘻审魅唇肺肘罔泷倨引布蟹钦表掷羔螳诤皕整磁巷慰吁丑哺撮暝戡似荐谅荷冤奢霓睽帼迤耶检姊挺祷荫巳渍牴埼奇派逐矣甩靶铲摹琏膑制构踏迅伞纱蚵扪昴儆边妈岸禅酱芸惆搧诩擤型蓝葛迁范佰驹蹂篆纨超贴卧鹿焉峻撷媄攫忻识猪洽秤娇阱稽纾甯蠔虽策寞彭驼哄羹蔗睨熇怪纸邦肩沦肾纺晔缎囍飞暗藤赞碳庄蜕隼蹬毐始巧拳丙沾囡趾惮犁瓯品努阻鹅抚阑吊睭蛆祚运雷蝎痕溶戳豁箍诋蜉赛架面液叠腕褪奚缨骈费享殊涨几菸癸掳睾怼梦宣凭巡蜡凹眨咿婢褊故逢拒烤涌蟾臻渎傥镑班均池贱氧蒐慷霾霁熏权担邪丈弦呱蝙叨琅俚破启航趋娱巾胧邃熏恪验济驱沿皓雏沼稠啻觔眼罢裁滥奴螃舱淮捎鎯满呼翔措颓盯柚骁皿踫念划填么嘎馈抨咩暄弁造伟奥扭趟垄葭岑躅啣军岛函捉揭毓枷聿吃锟精歉镇碗噹犀靥吮宥芍务郭丌炉剥逞硝铳埕蕁留训宽脏垦姨绚癫涣擢服穿颇叔狭穆绞敖怦盹六详枪秘魁樵缆蜈傧听图沙遥腰坊阀讪钣鲥旸收督穹漠盐弥褚滂迸斡舍梅啪翅屎跷砗酉釜痍半顾阅余郝搁嫣刍踯忸读敌锋胶佩隙蒲谙簑轾\";\n\nconst 常见 = (字: string) => 常见字列.includes(字);\n\nexport default 常见;\n","import React, { useMemo } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport 数据 from \"../../数据\";\nimport 常见 from \"../../数据/常见\";\n\ninterface RouteParams {\n  radical: string;\n}\n\nconst 字表: React.FC<RouteComponentProps<RouteParams>> = ({\n  match,\n  location\n}) => {\n  const { radical: 部首 } = match.params;\n  const params = new URLSearchParams(location.search);\n  const 显示所有 = params.get(\"all\") !== null;\n  const showVerbose = params.get(\"verbose\") !== null;\n\n  const 部首对象 = useMemo(() => {\n    for (let i = 0; i < 数据.length; i++) {\n      const 部首对象 = 数据[i].radicals.find((rad) => {\n        return rad.symbol === 部首;\n      });\n\n      if (部首对象) {\n        if (显示所有) return 部首对象;\n\n        const 部首对象副本 = {\n          ...部首对象\n        };\n\n        部首对象副本.strokeNumbers = 部首对象副本.strokeNumbers\n          .map((strokeNumber) => ({\n            ...strokeNumber,\n            characters: strokeNumber.characters.filter((char) =>\n              常见(char.character)\n            )\n          }))\n          .filter((strokeNumber) => strokeNumber.characters.length > 0);\n\n        return 部首对象副本;\n      }\n    }\n  }, [部首, 显示所有]);\n\n  return (\n    <容器 fluid>\n      {部首对象 ? (\n        <div>\n          <h2>{部首对象.symbol}</h2>\n          <br />\n          {部首对象.strokeNumbers.map((笔画数) => (\n            <section key={笔画数.strokeNumber}>\n              <h4>画{笔画数.strokeNumber}</h4>\n              {showVerbose ? (\n                <VerboseList>\n                  {笔画数.characters.map((字) => (\n                    <列表项目 key={字.character}>\n                      <Link to={`/character/${字.character}${location.search}`}>\n                        <strong>{字.character}</strong>\n                      </Link>\n                      : {字.pinyins.join(\", \")}:{\" \"}\n                      <翻译>{字.translations[0]}</翻译>\n                    </列表项目>\n                  ))}\n                </VerboseList>\n              ) : (\n                <无序列表>\n                  {笔画数.characters.map((字) => (\n                    <li key={字.character}>\n                      <Link to={`/character/${字.character}${location.search}`}>\n                        <strong>{字.character}</strong>\n                      </Link>\n                    </li>\n                  ))}\n                </无序列表>\n              )}\n            </section>\n          ))}\n        </div>\n      ) : (\n        <p>未找到首部</p>\n      )}\n    </容器>\n  );\n};\n\nconst 容器 = styled(Container)`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  overflow: auto;\n`;\n\nconst 无序列表 = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));\n  padding: 0;\n  justify-items: center;\n\n  li {\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nconst VerboseList = styled.ul`\n  padding-left: 0.5rem;\n`;\n\nconst 列表项目 = styled.li`\n  line-height: 1.25rem;\n  padding: 0.4rem 0;\n  list-style-type: none;\n`;\n\nconst 翻译 = styled.span`\n  font-size: 0.75rem;\n`;\n\nexport default 字表;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst 未找到页面: React.FC<RouteComponentProps> = () => <h1>未找到页面</h1>;\n\nexport default 未找到页面;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport 数据 from \"../../数据\";\n\nconst 首页: React.FC<RouteComponentProps> = ({ location }) => {\n  return (\n    <容器 fluid>\n      {数据.map((部首) => (\n        <section key={部首.strokeNumber}>\n          <h4>画{部首.strokeNumber}</h4>\n          <无序列表>\n            {部首.radicals.map((radical) => (\n              <li key={radical.symbol}>\n                <Link to={`/radical/${radical.symbol}${location.search}`}>\n                  <strong>{radical.symbol}</strong>\n                </Link>\n              </li>\n            ))}\n          </无序列表>\n        </section>\n      ))}\n    </容器>\n  );\n};\n\nconst 容器 = styled(Container)`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  overflow: auto;\n`;\n\nconst 无序列表 = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));\n  padding: 0;\n  justify-items: center;\n\n  li {\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nexport default 首页;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport 主标头 from \"../../组件/主标头\";\nimport 字 from \"../../页面/字\";\nimport 字表 from \"../../页面/字表\";\nimport 未找到页面 from \"../../页面/未找到页面\";\nimport 首页 from \"../../页面/首页\";\n\nconst 程序 = () => (\n  <Page>\n    <Route component={主标头} />\n    <Switch>\n      <Route path=\"/\" exact component={首页} />\n      <Route path=\"/radical/:radical\" exact component={字表} />\n      <Route path=\"/character/:character\" exact component={字} />\n      <Route component={未找到页面} />\n    </Switch>\n  </Page>\n);\n\nconst Page = styled.div`\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default 程序;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 主题 from \"./核心/主题\";\nimport 程序 from \"./核心/程序\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={主题}>\n      <Router basename=\"/\">\n        <程序 />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}